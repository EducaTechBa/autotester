{
    "buildhost_description": {
        "id": "magi",
        "os": "Linux 5.0.0-20-generic x86_64\nUbuntu 19.04\n"
    },
    "tools": {
        "compile": "g++ (Ubuntu 8.3.0-6ubuntu1) 8.3.0",
        "compile[debug]": "g++ (Ubuntu 8.3.0-6ubuntu1) 8.3.0",
        "debug": "GNU gdb (Ubuntu 8.2.91.20190405-0ubuntu3) 8.2.91.20190405-git",
        "profile[memcheck]": "valgrind-3.14.0",
        "profile[sgcheck]": "valgrind-3.14.0"
    },
    "test_results": {
        "6": {
            "success": true,
            "status": 1,
            "tools": {
                "patch": {
                    "success": true
                },
                "compile[debug]": {
                    "status": 1,
                    "duration": 1,
                    "output": "",
                    "exit_code": 0,
                    "success": true,
                    "parsed_output": []
                },
                "execute": {
                    "status": 1,
                    "duration": 0,
                    "output": "Vrsta spremnika: Bure\nSadrzaj: Voda\nVlastita tezina: 15 (kg)\nSpecificna tezina tecnosti: 1000 (kg\/m^3)\nZapremina tecnosti: 200 (l)\nUkupna tezina: 215 (kg)\nVrsta spremnika: Bure\nSadrzaj: Krv\nVlastita tezina: 5 (kg)\nSpecificna tezina tecnosti: 1300 (kg\/m^3)\nZapremina tecnosti: 150 (l)\nUkupna tezina: 200 (kg)\nVrsta spremnika: Sanduk\nSadrzaj: Voce\nTezine predmeta: 1 3 5 6 (kg)\nVlastita tezina: 50 (kg)\nUkupna tezina: 65 (kg)\nVrsta spremnika: Vreca\nSadrzaj: Secer\nVlastita tezina: 0.5 (kg)\nTezina pohranjene materije: 40 (kg)\nUkupna tezina: 40.5 (kg)\nVrsta spremnika: Vreca\nSadrzaj: Brasno\nVlastita tezina: 0.1 (kg)\nTezina pohranjene materije: 25.5 (kg)\nUkupna tezina: 25.6 (kg)",
                    "exit_code": 0,
                    "success": true
                },
                "debug": {
                    "success": true
                },
                "profile[memcheck]": {
                    "status": 1,
                    "duration": 1,
                    "output": "==21706== Memcheck, a memory error detector\n==21706== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.\n==21706== Using Valgrind-3.14.0 and LibVEX; rerun with -h for copyright info\n==21706== Command: outputths58W\n==21706==\n====START_TEST_434====Vrsta spremnika: Bure\nSadrzaj: Voda\nVlastita tezina: 15 (kg)\nSpecificna tezina tecnosti: 1000 (kg\/m^3)\nZapremina tecnosti: 200 (l)\nUkupna tezina: 215 (kg)\nVrsta spremnika: Bure\nSadrzaj: Krv\nVlastita tezina: 5 (kg)\nSpecificna tezina tecnosti: 1300 (kg\/m^3)\nZapremina tecnosti: 150 (l)\nUkupna tezina: 200 (kg)\nVrsta spremnika: Sanduk\nSadrzaj: Voce\nTezine predmeta: 1 3 5 6 (kg)\nVlastita tezina: 50 (kg)\nUkupna tezina: 65 (kg)\nVrsta spremnika: Vreca\nSadrzaj: Secer\nVlastita tezina: 0.5 (kg)\nTezina pohranjene materije: 40 (kg)\nUkupna tezina: 40.5 (kg)\nVrsta spremnika: Vreca\nSadrzaj: Brasno\nVlastita tezina: 0.1 (kg)\nTezina pohranjene materije: 25.5 (kg)\nUkupna tezina: 25.6 (kg)\n====END_TEST_434======21706==\n==21706== HEAP SUMMARY:\n==21706==     in use at exit: 0 bytes in 0 blocks\n==21706==   total heap usage: 27 allocs, 27 frees, 78,344 bytes allocated\n==21706==\n==21706== All heap blocks were freed -- no leaks are possible\n==21706==\n==21706== For counts of detected and suppressed errors, rerun with: -v\n==21706== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)",
                    "exit_code": 0,
                    "success": true,
                    "parsed_output": []
                },
                "profile[sgcheck]": {
                    "status": 1,
                    "duration": 1,
                    "output": "==21708== Memcheck, a memory error detector\n==21708== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.\n==21708== Using Valgrind-3.14.0 and LibVEX; rerun with -h for copyright info\n==21708== Command: outputths58W\n==21708==\n====START_TEST_434====Vrsta spremnika: Bure\nSadrzaj: Voda\nVlastita tezina: 15 (kg)\nSpecificna tezina tecnosti: 1000 (kg\/m^3)\nZapremina tecnosti: 200 (l)\nUkupna tezina: 215 (kg)\nVrsta spremnika: Bure\nSadrzaj: Krv\nVlastita tezina: 5 (kg)\nSpecificna tezina tecnosti: 1300 (kg\/m^3)\nZapremina tecnosti: 150 (l)\nUkupna tezina: 200 (kg)\nVrsta spremnika: Sanduk\nSadrzaj: Voce\nTezine predmeta: 1 3 5 6 (kg)\nVlastita tezina: 50 (kg)\nUkupna tezina: 65 (kg)\nVrsta spremnika: Vreca\nSadrzaj: Secer\nVlastita tezina: 0.5 (kg)\nTezina pohranjene materije: 40 (kg)\nUkupna tezina: 40.5 (kg)\nVrsta spremnika: Vreca\nSadrzaj: Brasno\nVlastita tezina: 0.1 (kg)\nTezina pohranjene materije: 25.5 (kg)\nUkupna tezina: 25.6 (kg)\n====END_TEST_434======21708==\n==21708== HEAP SUMMARY:\n==21708==     in use at exit: 0 bytes in 0 blocks\n==21708==   total heap usage: 27 allocs, 27 frees, 78,344 bytes allocated\n==21708==\n==21708== All heap blocks were freed -- no leaks are possible\n==21708==\n==21708== For counts of detected and suppressed errors, rerun with: -v\n==21708== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)",
                    "exit_code": 0,
                    "success": true,
                    "parsed_output": []
                }
            }
        },
        "7": {
            "success": false,
            "status": 6,
            "tools": {
                "patch": {
                    "success": true
                },
                "compile[debug]": {
                    "status": 1,
                    "duration": 0,
                    "output": "",
                    "exit_code": 0,
                    "success": true,
                    "parsed_output": []
                },
                "execute": {
                    "status": false,
                    "duration": 1,
                    "output": "Vrsta spremnika: Vreca\nSadrzaj: Brasno\nVlastita tezina: 0.1 (kg)\nTezina pohranjene materije: 25.5 (kg)\nUkupna tezina: 25.6 (kg)\n1\nVrsta spremnika: Sanduk\nSadrzaj: Voce\nTezine predmeta: 1 3 5 6 (kg)\nVlastita tezina: 50 (kg)\nUkupna tezina: 65 (kg)",
                    "exit_code": 0,
                    "success": 6
                },
                "debug": {
                    "success": true
                },
                "profile[memcheck]": {
                    "status": 1,
                    "duration": 1,
                    "output": "==21720== Memcheck, a memory error detector\n==21720== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.\n==21720== Using Valgrind-3.14.0 and LibVEX; rerun with -h for copyright info\n==21720== Command: output736LOV\n==21720==\n====START_TEST_8016====Vrsta spremnika: Vreca\nSadrzaj: Brasno\nVlastita tezina: 0.1 (kg)\nTezina pohranjene materije: 25.5 (kg)\nUkupna tezina: 25.6 (kg)\n1\nVrsta spremnika: Sanduk\nSadrzaj: Voce\nTezine predmeta: 1 3 5 6 (kg)\nVlastita tezina: 50 (kg)\nUkupna tezina: 65 (kg)\n====END_TEST_8016======21720==\n==21720== HEAP SUMMARY:\n==21720==     in use at exit: 0 bytes in 0 blocks\n==21720==   total heap usage: 16 allocs, 16 frees, 77,648 bytes allocated\n==21720==\n==21720== All heap blocks were freed -- no leaks are possible\n==21720==\n==21720== For counts of detected and suppressed errors, rerun with: -v\n==21720== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)",
                    "exit_code": 0,
                    "success": true,
                    "parsed_output": []
                },
                "profile[sgcheck]": {
                    "status": 1,
                    "duration": 1,
                    "output": "==21722== Memcheck, a memory error detector\n==21722== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.\n==21722== Using Valgrind-3.14.0 and LibVEX; rerun with -h for copyright info\n==21722== Command: output736LOV\n==21722==\n====START_TEST_8016====Vrsta spremnika: Vreca\nSadrzaj: Brasno\nVlastita tezina: 0.1 (kg)\nTezina pohranjene materije: 25.5 (kg)\nUkupna tezina: 25.6 (kg)\n1\nVrsta spremnika: Sanduk\nSadrzaj: Voce\nTezine predmeta: 1 3 5 6 (kg)\nVlastita tezina: 50 (kg)\nUkupna tezina: 65 (kg)\n====END_TEST_8016======21722==\n==21722== HEAP SUMMARY:\n==21722==     in use at exit: 0 bytes in 0 blocks\n==21722==   total heap usage: 16 allocs, 16 frees, 77,648 bytes allocated\n==21722==\n==21722== All heap blocks were freed -- no leaks are possible\n==21722==\n==21722== For counts of detected and suppressed errors, rerun with: -v\n==21722== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)",
                    "exit_code": 0,
                    "success": true,
                    "parsed_output": []
                }
            }
        },
        "8": {
            "success": true,
            "status": 1,
            "tools": {
                "patch": {
                    "success": true
                },
                "compile[debug]": {
                    "status": 1,
                    "duration": 1,
                    "output": "",
                    "exit_code": 0,
                    "success": true,
                    "parsed_output": []
                },
                "execute": {
                    "status": 1,
                    "duration": 0,
                    "output": "Vrsta spremnika: Bure\nSadrzaj: Krv\nVlastita tezina: 5 (kg)\nSpecificna tezina tecnosti: 1300 (kg\/m^3)\nZapremina tecnosti: 150 (l)\nUkupna tezina: 200 (kg)\nVrsta spremnika: Sanduk\nSadrzaj: Voce\nTezine predmeta: 1 3 5 6 (kg)\nVlastita tezina: 50 (kg)\nUkupna tezina: 65 (kg)\nVrsta spremnika: Vreca\nSadrzaj: Brasno\nVlastita tezina: 0.1 (kg)\nTezina pohranjene materije: 25.5 (kg)\nUkupna tezina: 25.6 (kg)",
                    "exit_code": 0,
                    "success": true
                },
                "debug": {
                    "success": true
                },
                "profile[memcheck]": {
                    "status": 1,
                    "duration": 1,
                    "output": "==21735== Memcheck, a memory error detector\n==21735== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.\n==21735== Using Valgrind-3.14.0 and LibVEX; rerun with -h for copyright info\n==21735== Command: outputIHaKA3\n==21735==\n====START_TEST_7317====Vrsta spremnika: Bure\nSadrzaj: Krv\nVlastita tezina: 5 (kg)\nSpecificna tezina tecnosti: 1300 (kg\/m^3)\nZapremina tecnosti: 150 (l)\nUkupna tezina: 200 (kg)\nVrsta spremnika: Sanduk\nSadrzaj: Voce\nTezine predmeta: 1 3 5 6 (kg)\nVlastita tezina: 50 (kg)\nUkupna tezina: 65 (kg)\nVrsta spremnika: Vreca\nSadrzaj: Brasno\nVlastita tezina: 0.1 (kg)\nTezina pohranjene materije: 25.5 (kg)\nUkupna tezina: 25.6 (kg)\n====END_TEST_7317======21735==\n==21735== HEAP SUMMARY:\n==21735==     in use at exit: 0 bytes in 0 blocks\n==21735==   total heap usage: 21 allocs, 21 frees, 77,792 bytes allocated\n==21735==\n==21735== All heap blocks were freed -- no leaks are possible\n==21735==\n==21735== For counts of detected and suppressed errors, rerun with: -v\n==21735== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)",
                    "exit_code": 0,
                    "success": true,
                    "parsed_output": []
                },
                "profile[sgcheck]": {
                    "status": 1,
                    "duration": 1,
                    "output": "==21737== Memcheck, a memory error detector\n==21737== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.\n==21737== Using Valgrind-3.14.0 and LibVEX; rerun with -h for copyright info\n==21737== Command: outputIHaKA3\n==21737==\n====START_TEST_7317====Vrsta spremnika: Bure\nSadrzaj: Krv\nVlastita tezina: 5 (kg)\nSpecificna tezina tecnosti: 1300 (kg\/m^3)\nZapremina tecnosti: 150 (l)\nUkupna tezina: 200 (kg)\nVrsta spremnika: Sanduk\nSadrzaj: Voce\nTezine predmeta: 1 3 5 6 (kg)\nVlastita tezina: 50 (kg)\nUkupna tezina: 65 (kg)\nVrsta spremnika: Vreca\nSadrzaj: Brasno\nVlastita tezina: 0.1 (kg)\nTezina pohranjene materije: 25.5 (kg)\nUkupna tezina: 25.6 (kg)\n====END_TEST_7317======21737==\n==21737== HEAP SUMMARY:\n==21737==     in use at exit: 0 bytes in 0 blocks\n==21737==   total heap usage: 21 allocs, 21 frees, 77,792 bytes allocated\n==21737==\n==21737== All heap blocks were freed -- no leaks are possible\n==21737==\n==21737== For counts of detected and suppressed errors, rerun with: -v\n==21737== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)",
                    "exit_code": 0,
                    "success": true,
                    "parsed_output": []
                }
            }
        },
        "9": {
            "success": false,
            "status": 5,
            "tools": {
                "patch": {
                    "success": true
                },
                "compile[debug]": {
                    "status": 1,
                    "duration": 1,
                    "output": "",
                    "exit_code": 0,
                    "success": true,
                    "parsed_output": []
                },
                "execute": {
                    "status": 3,
                    "duration": 0,
                    "output": "pure virtual method called\nterminate called without an active exception\nAborted (core dumped)",
                    "exit_code": 134,
                    "core": "\/tmp\/buildservice\/bs_75\/core",
                    "success": false
                },
                "debug": {
                    "status": 3,
                    "duration": 0,
                    "output": "[New LWP 21747]\nCore was generated by `outputNcinql'.\nProgram terminated with signal SIGABRT, Aborted.\n#0  0x00007f49fb558ed7 in ?? ()\n#0  0x00007f49fb558ed7 in ?? ()\n#1  0x0000000000000000 in ?? ()",
                    "exit_code": 0,
                    "success": true,
                    "parsed_output": [
                        []
                    ]
                },
                "profile[memcheck]": {
                    "status": 5,
                    "duration": 1,
                    "output": "==21753== Memcheck, a memory error detector\n==21753== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.\n==21753== Using Valgrind-3.14.0 and LibVEX; rerun with -h for copyright info\n==21753== Command: outputNcinql\n==21753==\n==21753== Invalid read of size 8\n==21753==    at 0x10A93D: main (cpp_task.cpp:298)\n==21753==  Address 0x4db4d50 is 16 bytes inside a block of size 72 free'd\n==21753==    at 0x4839E7B: operator delete(void*) (in \/usr\/lib\/x86_64-linux-gnu\/valgrind\/vgpreload_memcheck-amd64-linux.so)\n==21753==    by 0x11093B: __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<Vreca, std::allocator<Vreca>, (__gnu_cxx::_Lock_policy)2> >::deallocate(std::_Sp_counted_ptr_inplace<Vreca, std::allocator<Vreca>, (__gnu_cxx::_Lock_policy)2>*, unsigned long) (new_allocator.h:125)\n==21753==    by 0x110331: std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<Vreca, std::allocator<Vreca>, (__gnu_cxx::_Lock_policy)2> > >::deallocate(std::allocator<std::_Sp_counted_ptr_inplace<Vreca, std::allocator<Vreca>, (__gnu_cxx::_Lock_policy)2> >&, std::_Sp_counted_ptr_inplace<Vreca, std::allocator<Vreca>, (__gnu_cxx::_Lock_policy)2>*, unsigned long) (alloc_traits.h:462)\n==21753==    by 0x10FABB: std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<Vreca, std::allocator<Vreca>, (__gnu_cxx::_Lock_policy)2> > >::~__allocated_ptr() (allocated_ptr.h:73)\n==21753==    by 0x111311: std::_Sp_counted_ptr_inplace<Vreca, std::allocator<Vreca>, (__gnu_cxx::_Lock_policy)2>::_M_destroy() (shared_ptr_base.h:562)\n==21753==    by 0x10D0BF: std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release() (shared_ptr_base.h:171)\n==21753==    by 0x10C386: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count() (shared_ptr_base.h:728)\n==21753==    by 0x10AE87: std::__shared_ptr<Spremnik, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() (shared_ptr_base.h:1167)\n==21753==    by 0x10AEA3: std::shared_ptr<Spremnik>::~shared_ptr() (shared_ptr.h:103)\n==21753==    by 0x10EDDD: void __gnu_cxx::new_allocator<std::shared_ptr<Spremnik> >::destroy<std::shared_ptr<Spremnik> >(std::shared_ptr<Spremnik>*) (new_allocator.h:140)\n==21753==    by 0x10E681: void std::allocator_traits<std::allocator<std::shared_ptr<Spremnik> > >::destroy<std::shared_ptr<Spremnik> >(std::allocator<std::shared_ptr<Spremnik> >&, std::shared_ptr<Spremnik>*) (alloc_traits.h:487)\n==21753==    by 0x10DA33: std::vector<std::shared_ptr<Spremnik>, std::allocator<std::shared_ptr<Spremnik> > >::_M_erase(__gnu_cxx::__normal_iterator<std::shared_ptr<Spremnik>*, std::vector<std::shared_ptr<Spremnik>, std::allocator<std::shared_ptr<Spremnik> > > >) (vector.tcc:165)\n==21753==  Block was alloc'd at\n==21753==    at 0x4838DBF: operator new(unsigned long) (in \/usr\/lib\/x86_64-linux-gnu\/valgrind\/vgpreload_memcheck-amd64-linux.so)\n==21753==    by 0x11090B: __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<Vreca, std::allocator<Vreca>, (__gnu_cxx::_Lock_policy)2> >::allocate(unsigned long, void const*) (new_allocator.h:111)\n==21753==    by 0x1102CA: std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<Vreca, std::allocator<Vreca>, (__gnu_cxx::_Lock_policy)2> > >::allocate(std::allocator<std::_Sp_counted_ptr_inplace<Vreca, std::allocator<Vreca>, (__gnu_cxx::_Lock_policy)2> >&, unsigned long) (alloc_traits.h:436)\n==21753==    by 0x10FA67: std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<Vreca, std::allocator<Vreca>, (__gnu_cxx::_Lock_policy)2> > > std::__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<Vreca, std::allocator<Vreca>, (__gnu_cxx::_Lock_policy)2> > >(std::allocator<std::_Sp_counted_ptr_inplace<Vreca, std::allocator<Vreca>, (__gnu_cxx::_Lock_policy)2> >&) (allocated_ptr.h:97)\n==21753==    by 0x10F245: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<Vreca, std::allocator<Vreca>, double&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, double&>(Vreca*&, std::_Sp_alloc_shared_tag<std::allocator<Vreca> >, double&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, double&) (shared_ptr_base.h:675)\n==21753==    by 0x10EB0B: std::__shared_ptr<Vreca, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<Vreca>, double&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, double&>(std::_Sp_alloc_shared_tag<std::allocator<Vreca> >, double&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, double&) (shared_ptr_base.h:1342)\n==21753==    by 0x10DFBE: std::shared_ptr<Vreca>::shared_ptr<std::allocator<Vreca>, double&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, double&>(std::_Sp_alloc_shared_tag<std::allocator<Vreca> >, double&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, double&) (shared_ptr.h:359)\n==21753==    by 0x10D20C: std::shared_ptr<Vreca> std::allocate_shared<Vreca, std::allocator<Vreca>, double&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, double&>(std::allocator<Vreca> const&, double&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, double&) (shared_ptr.h:706)\n==21753==    by 0x10C48B: std::shared_ptr<Vreca> std::make_shared<Vreca, double&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, double&>(double&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, double&) (shared_ptr.h:722)\n==21753==    by 0x10B216: Vreca::DajKopiju() (cpp_task.cpp:71)\n==21753==    by 0x10BA12: Skladiste::DodajSpremnik(Spremnik*, bool) (cpp_task.cpp:154)\n==21753==    by 0x10A901: main (cpp_task.cpp:296)\n==21753==\npure virtual method called\nterminate called without an active exception\n==21753==\n==21753== Process terminating with default action of signal 6 (SIGABRT): dumping core\n==21753==    at 0x4AA7ED7: raise (raise.c:51)\n==21753==    by 0x4A89534: abort (abort.c:79)\n==21753==    by 0x4901671: ??? (in \/usr\/lib\/x86_64-linux-gnu\/libstdc++.so.6.0.26)\n==21753==    by 0x490D2B5: ??? (in \/usr\/lib\/x86_64-linux-gnu\/libstdc++.so.6.0.26)\n==21753==    by 0x490D300: std::terminate() (in \/usr\/lib\/x86_64-linux-gnu\/libstdc++.so.6.0.26)\n==21753==    by 0x490E01E: __cxa_pure_virtual (in \/usr\/lib\/x86_64-linux-gnu\/libstdc++.so.6.0.26)\n==21753==    by 0x10A947: main (cpp_task.cpp:298)\n====START_TEST_75======21753==\n==21753== HEAP SUMMARY:\n==21753==     in use at exit: 16 bytes in 1 blocks\n==21753==   total heap usage: 5 allocs, 4 frees, 76,944 bytes allocated\n==21753==\n==21753== LEAK SUMMARY:\n==21753==    definitely lost: 0 bytes in 0 blocks\n==21753==    indirectly lost: 0 bytes in 0 blocks\n==21753==      possibly lost: 0 bytes in 0 blocks\n==21753==    still reachable: 16 bytes in 1 blocks\n==21753==         suppressed: 0 bytes in 0 blocks\n==21753== Rerun with --leak-check=full to see details of leaked memory\n==21753==\n==21753== For counts of detected and suppressed errors, rerun with: -v\n==21753== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)\nAborted (core dumped)",
                    "exit_code": 134,
                    "success": false,
                    "parsed_output": [
                        {
                            "type": 2,
                            "output": " Invalid read of size 8\n    at 0x10A93D: main (cpp_task.cpp:298)\n  Address 0x4db4d50 is 16 bytes inside a block of size 72 free'd\n    at 0x4839E7B: operator delete(void*) (in \/usr\/lib\/x86_64-linux-gnu\/valgrind\/vgpreload_memcheck-amd64-linux.so)\n    by 0x11093B: __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<Vreca, std::allocator<Vreca>, (__gnu_cxx::_Lock_policy)2> >::deallocate(std::_Sp_counted_ptr_inplace<Vreca, std::allocator<Vreca>, (__gnu_cxx::_Lock_policy)2>*, unsigned long) (new_allocator.h:125)\n    by 0x110331: std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<Vreca, std::allocator<Vreca>, (__gnu_cxx::_Lock_policy)2> > >::deallocate(std::allocator<std::_Sp_counted_ptr_inplace<Vreca, std::allocator<Vreca>, (__gnu_cxx::_Lock_policy)2> >&, std::_Sp_counted_ptr_inplace<Vreca, std::allocator<Vreca>, (__gnu_cxx::_Lock_policy)2>*, unsigned long) (alloc_traits.h:462)\n    by 0x10FABB: std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<Vreca, std::allocator<Vreca>, (__gnu_cxx::_Lock_policy)2> > >::~__allocated_ptr() (allocated_ptr.h:73)\n    by 0x111311: std::_Sp_counted_ptr_inplace<Vreca, std::allocator<Vreca>, (__gnu_cxx::_Lock_policy)2>::_M_destroy() (shared_ptr_base.h:562)\n    by 0x10D0BF: std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release() (shared_ptr_base.h:171)\n    by 0x10C386: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count() (shared_ptr_base.h:728)\n    by 0x10AE87: std::__shared_ptr<Spremnik, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() (shared_ptr_base.h:1167)\n    by 0x10AEA3: std::shared_ptr<Spremnik>::~shared_ptr() (shared_ptr.h:103)\n    by 0x10EDDD: void __gnu_cxx::new_allocator<std::shared_ptr<Spremnik> >::destroy<std::shared_ptr<Spremnik> >(std::shared_ptr<Spremnik>*) (new_allocator.h:140)\n    by 0x10E681: void std::allocator_traits<std::allocator<std::shared_ptr<Spremnik> > >::destroy<std::shared_ptr<Spremnik> >(std::allocator<std::shared_ptr<Spremnik> >&, std::shared_ptr<Spremnik>*) (alloc_traits.h:487)\n    by 0x10DA33: std::vector<std::shared_ptr<Spremnik>, std::allocator<std::shared_ptr<Spremnik> > >::_M_erase(__gnu_cxx::__normal_iterator<std::shared_ptr<Spremnik>*, std::vector<std::shared_ptr<Spremnik>, std::allocator<std::shared_ptr<Spremnik> > > >) (vector.tcc:165)\n  Block was alloc'd at\n    at 0x4838DBF: operator new(unsigned long) (in \/usr\/lib\/x86_64-linux-gnu\/valgrind\/vgpreload_memcheck-amd64-linux.so)\n    by 0x11090B: __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<Vreca, std::allocator<Vreca>, (__gnu_cxx::_Lock_policy)2> >::allocate(unsigned long, void const*) (new_allocator.h:111)\n    by 0x1102CA: std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<Vreca, std::allocator<Vreca>, (__gnu_cxx::_Lock_policy)2> > >::allocate(std::allocator<std::_Sp_counted_ptr_inplace<Vreca, std::allocator<Vreca>, (__gnu_cxx::_Lock_policy)2> >&, unsigned long) (alloc_traits.h:436)\n    by 0x10FA67: std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<Vreca, std::allocator<Vreca>, (__gnu_cxx::_Lock_policy)2> > > std::__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<Vreca, std::allocator<Vreca>, (__gnu_cxx::_Lock_policy)2> > >(std::allocator<std::_Sp_counted_ptr_inplace<Vreca, std::allocator<Vreca>, (__gnu_cxx::_Lock_policy)2> >&) (allocated_ptr.h:97)\n    by 0x10F245: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<Vreca, std::allocator<Vreca>, double&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, double&>(Vreca*&, std::_Sp_alloc_shared_tag<std::allocator<Vreca> >, double&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, double&) (shared_ptr_base.h:675)\n    by 0x10EB0B: std::__shared_ptr<Vreca, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<Vreca>, double&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, double&>(std::_Sp_alloc_shared_tag<std::allocator<Vreca> >, double&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, double&) (shared_ptr_base.h:1342)\n    by 0x10DFBE: std::shared_ptr<Vreca>::shared_ptr<std::allocator<Vreca>, double&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, double&>(std::_Sp_alloc_shared_tag<std::allocator<Vreca> >, double&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, double&) (shared_ptr.h:359)\n    by 0x10D20C: std::shared_ptr<Vreca> std::allocate_shared<Vreca, std::allocator<Vreca>, double&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, double&>(std::allocator<Vreca> const&, double&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, double&) (shared_ptr.h:706)\n    by 0x10C48B: std::shared_ptr<Vreca> std::make_shared<Vreca, double&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, double&>(double&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, double&) (shared_ptr.h:722)\n    by 0x10B216: Vreca::DajKopiju() (cpp_task.cpp:71)\n    by 0x10BA12: Skladiste::DodajSpremnik(Spremnik*, bool) (cpp_task.cpp:154)\n    by 0x10A901: main (cpp_task.cpp:296)\n",
                            "file": "cpp_task.cpp",
                            "line": "298",
                            "file_alloced": "cpp_task.cpp",
                            "line_alloced": "71"
                        }
                    ]
                }
            }
        },
        "10": {
            "success": false,
            "status": 5,
            "tools": {
                "patch": {
                    "success": true
                },
                "compile[debug]": {
                    "status": 1,
                    "duration": 1,
                    "output": "",
                    "exit_code": 0,
                    "success": true,
                    "parsed_output": []
                },
                "execute": {
                    "status": 3,
                    "duration": 0,
                    "output": "pure virtual method called\nterminate called without an active exception\nAborted (core dumped)",
                    "exit_code": 134,
                    "core": "\/tmp\/buildservice\/bs_9608\/core",
                    "success": false
                },
                "debug": {
                    "status": 3,
                    "duration": 0,
                    "output": "[New LWP 21777]\nCore was generated by `outputVCCdjK'.\nProgram terminated with signal SIGABRT, Aborted.\n#0  0x00007f271586aed7 in ?? ()\n#0  0x00007f271586aed7 in ?? ()\n#1  0x0000000000000000 in ?? ()",
                    "exit_code": 0,
                    "success": true,
                    "parsed_output": [
                        []
                    ]
                },
                "profile[memcheck]": {
                    "status": 5,
                    "duration": 2,
                    "output": "==21783== Memcheck, a memory error detector\n==21783== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.\n==21783== Using Valgrind-3.14.0 and LibVEX; rerun with -h for copyright info\n==21783== Command: outputVCCdjK\n==21783==\n==21783== Invalid read of size 8\n==21783==    at 0x10A93D: main (cpp_task.cpp:298)\n==21783==  Address 0x4db4d50 is 16 bytes inside a block of size 72 free'd\n==21783==    at 0x4839E7B: operator delete(void*) (in \/usr\/lib\/x86_64-linux-gnu\/valgrind\/vgpreload_memcheck-amd64-linux.so)\n==21783==    by 0x11093B: __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<Vreca, std::allocator<Vreca>, (__gnu_cxx::_Lock_policy)2> >::deallocate(std::_Sp_counted_ptr_inplace<Vreca, std::allocator<Vreca>, (__gnu_cxx::_Lock_policy)2>*, unsigned long) (new_allocator.h:125)\n==21783==    by 0x110331: std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<Vreca, std::allocator<Vreca>, (__gnu_cxx::_Lock_policy)2> > >::deallocate(std::allocator<std::_Sp_counted_ptr_inplace<Vreca, std::allocator<Vreca>, (__gnu_cxx::_Lock_policy)2> >&, std::_Sp_counted_ptr_inplace<Vreca, std::allocator<Vreca>, (__gnu_cxx::_Lock_policy)2>*, unsigned long) (alloc_traits.h:462)\n==21783==    by 0x10FABB: std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<Vreca, std::allocator<Vreca>, (__gnu_cxx::_Lock_policy)2> > >::~__allocated_ptr() (allocated_ptr.h:73)\n==21783==    by 0x111311: std::_Sp_counted_ptr_inplace<Vreca, std::allocator<Vreca>, (__gnu_cxx::_Lock_policy)2>::_M_destroy() (shared_ptr_base.h:562)\n==21783==    by 0x10D0BF: std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release() (shared_ptr_base.h:171)\n==21783==    by 0x10C386: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count() (shared_ptr_base.h:728)\n==21783==    by 0x10AE87: std::__shared_ptr<Spremnik, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() (shared_ptr_base.h:1167)\n==21783==    by 0x10AEA3: std::shared_ptr<Spremnik>::~shared_ptr() (shared_ptr.h:103)\n==21783==    by 0x10EDDD: void __gnu_cxx::new_allocator<std::shared_ptr<Spremnik> >::destroy<std::shared_ptr<Spremnik> >(std::shared_ptr<Spremnik>*) (new_allocator.h:140)\n==21783==    by 0x10E681: void std::allocator_traits<std::allocator<std::shared_ptr<Spremnik> > >::destroy<std::shared_ptr<Spremnik> >(std::allocator<std::shared_ptr<Spremnik> >&, std::shared_ptr<Spremnik>*) (alloc_traits.h:487)\n==21783==    by 0x10DA33: std::vector<std::shared_ptr<Spremnik>, std::allocator<std::shared_ptr<Spremnik> > >::_M_erase(__gnu_cxx::__normal_iterator<std::shared_ptr<Spremnik>*, std::vector<std::shared_ptr<Spremnik>, std::allocator<std::shared_ptr<Spremnik> > > >) (vector.tcc:165)\n==21783==  Block was alloc'd at\n==21783==    at 0x4838DBF: operator new(unsigned long) (in \/usr\/lib\/x86_64-linux-gnu\/valgrind\/vgpreload_memcheck-amd64-linux.so)\n==21783==    by 0x11090B: __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<Vreca, std::allocator<Vreca>, (__gnu_cxx::_Lock_policy)2> >::allocate(unsigned long, void const*) (new_allocator.h:111)\n==21783==    by 0x1102CA: std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<Vreca, std::allocator<Vreca>, (__gnu_cxx::_Lock_policy)2> > >::allocate(std::allocator<std::_Sp_counted_ptr_inplace<Vreca, std::allocator<Vreca>, (__gnu_cxx::_Lock_policy)2> >&, unsigned long) (alloc_traits.h:436)\n==21783==    by 0x10FA67: std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<Vreca, std::allocator<Vreca>, (__gnu_cxx::_Lock_policy)2> > > std::__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<Vreca, std::allocator<Vreca>, (__gnu_cxx::_Lock_policy)2> > >(std::allocator<std::_Sp_counted_ptr_inplace<Vreca, std::allocator<Vreca>, (__gnu_cxx::_Lock_policy)2> >&) (allocated_ptr.h:97)\n==21783==    by 0x10F245: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<Vreca, std::allocator<Vreca>, double&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, double&>(Vreca*&, std::_Sp_alloc_shared_tag<std::allocator<Vreca> >, double&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, double&) (shared_ptr_base.h:675)\n==21783==    by 0x10EB0B: std::__shared_ptr<Vreca, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<Vreca>, double&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, double&>(std::_Sp_alloc_shared_tag<std::allocator<Vreca> >, double&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, double&) (shared_ptr_base.h:1342)\n==21783==    by 0x10DFBE: std::shared_ptr<Vreca>::shared_ptr<std::allocator<Vreca>, double&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, double&>(std::_Sp_alloc_shared_tag<std::allocator<Vreca> >, double&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, double&) (shared_ptr.h:359)\n==21783==    by 0x10D20C: std::shared_ptr<Vreca> std::allocate_shared<Vreca, std::allocator<Vreca>, double&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, double&>(std::allocator<Vreca> const&, double&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, double&) (shared_ptr.h:706)\n==21783==    by 0x10C48B: std::shared_ptr<Vreca> std::make_shared<Vreca, double&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, double&>(double&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, double&) (shared_ptr.h:722)\n==21783==    by 0x10B216: Vreca::DajKopiju() (cpp_task.cpp:71)\n==21783==    by 0x10BA12: Skladiste::DodajSpremnik(Spremnik*, bool) (cpp_task.cpp:154)\n==21783==    by 0x10A901: main (cpp_task.cpp:296)\n==21783==\npure virtual method called\nterminate called without an active exception\n==21783==\n==21783== Process terminating with default action of signal 6 (SIGABRT): dumping core\n==21783==    at 0x4AA7ED7: raise (raise.c:51)\n==21783==    by 0x4A89534: abort (abort.c:79)\n==21783==    by 0x4901671: ??? (in \/usr\/lib\/x86_64-linux-gnu\/libstdc++.so.6.0.26)\n==21783==    by 0x490D2B5: ??? (in \/usr\/lib\/x86_64-linux-gnu\/libstdc++.so.6.0.26)\n==21783==    by 0x490D300: std::terminate() (in \/usr\/lib\/x86_64-linux-gnu\/libstdc++.so.6.0.26)\n==21783==    by 0x490E01E: __cxa_pure_virtual (in \/usr\/lib\/x86_64-linux-gnu\/libstdc++.so.6.0.26)\n==21783==    by 0x10A947: main (cpp_task.cpp:298)\n====START_TEST_9608======21783==\n==21783== HEAP SUMMARY:\n==21783==     in use at exit: 16 bytes in 1 blocks\n==21783==   total heap usage: 5 allocs, 4 frees, 76,944 bytes allocated\n==21783==\n==21783== LEAK SUMMARY:\n==21783==    definitely lost: 0 bytes in 0 blocks\n==21783==    indirectly lost: 0 bytes in 0 blocks\n==21783==      possibly lost: 0 bytes in 0 blocks\n==21783==    still reachable: 16 bytes in 1 blocks\n==21783==         suppressed: 0 bytes in 0 blocks\n==21783== Rerun with --leak-check=full to see details of leaked memory\n==21783==\n==21783== For counts of detected and suppressed errors, rerun with: -v\n==21783== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)\nAborted (core dumped)",
                    "exit_code": 134,
                    "success": false,
                    "parsed_output": [
                        {
                            "type": 2,
                            "output": " Invalid read of size 8\n    at 0x10A93D: main (cpp_task.cpp:298)\n  Address 0x4db4d50 is 16 bytes inside a block of size 72 free'd\n    at 0x4839E7B: operator delete(void*) (in \/usr\/lib\/x86_64-linux-gnu\/valgrind\/vgpreload_memcheck-amd64-linux.so)\n    by 0x11093B: __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<Vreca, std::allocator<Vreca>, (__gnu_cxx::_Lock_policy)2> >::deallocate(std::_Sp_counted_ptr_inplace<Vreca, std::allocator<Vreca>, (__gnu_cxx::_Lock_policy)2>*, unsigned long) (new_allocator.h:125)\n    by 0x110331: std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<Vreca, std::allocator<Vreca>, (__gnu_cxx::_Lock_policy)2> > >::deallocate(std::allocator<std::_Sp_counted_ptr_inplace<Vreca, std::allocator<Vreca>, (__gnu_cxx::_Lock_policy)2> >&, std::_Sp_counted_ptr_inplace<Vreca, std::allocator<Vreca>, (__gnu_cxx::_Lock_policy)2>*, unsigned long) (alloc_traits.h:462)\n    by 0x10FABB: std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<Vreca, std::allocator<Vreca>, (__gnu_cxx::_Lock_policy)2> > >::~__allocated_ptr() (allocated_ptr.h:73)\n    by 0x111311: std::_Sp_counted_ptr_inplace<Vreca, std::allocator<Vreca>, (__gnu_cxx::_Lock_policy)2>::_M_destroy() (shared_ptr_base.h:562)\n    by 0x10D0BF: std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release() (shared_ptr_base.h:171)\n    by 0x10C386: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count() (shared_ptr_base.h:728)\n    by 0x10AE87: std::__shared_ptr<Spremnik, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() (shared_ptr_base.h:1167)\n    by 0x10AEA3: std::shared_ptr<Spremnik>::~shared_ptr() (shared_ptr.h:103)\n    by 0x10EDDD: void __gnu_cxx::new_allocator<std::shared_ptr<Spremnik> >::destroy<std::shared_ptr<Spremnik> >(std::shared_ptr<Spremnik>*) (new_allocator.h:140)\n    by 0x10E681: void std::allocator_traits<std::allocator<std::shared_ptr<Spremnik> > >::destroy<std::shared_ptr<Spremnik> >(std::allocator<std::shared_ptr<Spremnik> >&, std::shared_ptr<Spremnik>*) (alloc_traits.h:487)\n    by 0x10DA33: std::vector<std::shared_ptr<Spremnik>, std::allocator<std::shared_ptr<Spremnik> > >::_M_erase(__gnu_cxx::__normal_iterator<std::shared_ptr<Spremnik>*, std::vector<std::shared_ptr<Spremnik>, std::allocator<std::shared_ptr<Spremnik> > > >) (vector.tcc:165)\n  Block was alloc'd at\n    at 0x4838DBF: operator new(unsigned long) (in \/usr\/lib\/x86_64-linux-gnu\/valgrind\/vgpreload_memcheck-amd64-linux.so)\n    by 0x11090B: __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<Vreca, std::allocator<Vreca>, (__gnu_cxx::_Lock_policy)2> >::allocate(unsigned long, void const*) (new_allocator.h:111)\n    by 0x1102CA: std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<Vreca, std::allocator<Vreca>, (__gnu_cxx::_Lock_policy)2> > >::allocate(std::allocator<std::_Sp_counted_ptr_inplace<Vreca, std::allocator<Vreca>, (__gnu_cxx::_Lock_policy)2> >&, unsigned long) (alloc_traits.h:436)\n    by 0x10FA67: std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<Vreca, std::allocator<Vreca>, (__gnu_cxx::_Lock_policy)2> > > std::__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<Vreca, std::allocator<Vreca>, (__gnu_cxx::_Lock_policy)2> > >(std::allocator<std::_Sp_counted_ptr_inplace<Vreca, std::allocator<Vreca>, (__gnu_cxx::_Lock_policy)2> >&) (allocated_ptr.h:97)\n    by 0x10F245: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<Vreca, std::allocator<Vreca>, double&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, double&>(Vreca*&, std::_Sp_alloc_shared_tag<std::allocator<Vreca> >, double&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, double&) (shared_ptr_base.h:675)\n    by 0x10EB0B: std::__shared_ptr<Vreca, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<Vreca>, double&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, double&>(std::_Sp_alloc_shared_tag<std::allocator<Vreca> >, double&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, double&) (shared_ptr_base.h:1342)\n    by 0x10DFBE: std::shared_ptr<Vreca>::shared_ptr<std::allocator<Vreca>, double&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, double&>(std::_Sp_alloc_shared_tag<std::allocator<Vreca> >, double&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, double&) (shared_ptr.h:359)\n    by 0x10D20C: std::shared_ptr<Vreca> std::allocate_shared<Vreca, std::allocator<Vreca>, double&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, double&>(std::allocator<Vreca> const&, double&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, double&) (shared_ptr.h:706)\n    by 0x10C48B: std::shared_ptr<Vreca> std::make_shared<Vreca, double&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, double&>(double&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, double&) (shared_ptr.h:722)\n    by 0x10B216: Vreca::DajKopiju() (cpp_task.cpp:71)\n    by 0x10BA12: Skladiste::DodajSpremnik(Spremnik*, bool) (cpp_task.cpp:154)\n    by 0x10A901: main (cpp_task.cpp:296)\n",
                            "file": "cpp_task.cpp",
                            "line": "298",
                            "file_alloced": "cpp_task.cpp",
                            "line_alloced": "71"
                        }
                    ]
                }
            }
        },
        "11": {
            "success": false,
            "status": 6,
            "tools": {
                "patch": {
                    "success": true
                },
                "compile[debug]": {
                    "status": 1,
                    "duration": 1,
                    "output": "",
                    "exit_code": 0,
                    "success": true,
                    "parsed_output": []
                },
                "execute": {
                    "status": false,
                    "duration": 0,
                    "output": "",
                    "exit_code": 0,
                    "success": 6
                },
                "debug": {
                    "success": true
                },
                "profile[memcheck]": {
                    "status": 1,
                    "duration": 1,
                    "output": "==21800== Memcheck, a memory error detector\n==21800== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.\n==21800== Using Valgrind-3.14.0 and LibVEX; rerun with -h for copyright info\n==21800== Command: outputZZUSDg\n==21800==\n====START_TEST_4475========END_TEST_4475======21800==\n==21800== HEAP SUMMARY:\n==21800==     in use at exit: 0 bytes in 0 blocks\n==21800==   total heap usage: 3 allocs, 3 frees, 77,352 bytes allocated\n==21800==\n==21800== All heap blocks were freed -- no leaks are possible\n==21800==\n==21800== For counts of detected and suppressed errors, rerun with: -v\n==21800== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)",
                    "exit_code": 0,
                    "success": true,
                    "parsed_output": []
                },
                "profile[sgcheck]": {
                    "status": 1,
                    "duration": 1,
                    "output": "==21802== Memcheck, a memory error detector\n==21802== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.\n==21802== Using Valgrind-3.14.0 and LibVEX; rerun with -h for copyright info\n==21802== Command: outputZZUSDg\n==21802==\n====START_TEST_4475========END_TEST_4475======21802==\n==21802== HEAP SUMMARY:\n==21802==     in use at exit: 0 bytes in 0 blocks\n==21802==   total heap usage: 3 allocs, 3 frees, 77,352 bytes allocated\n==21802==\n==21802== All heap blocks were freed -- no leaks are possible\n==21802==\n==21802== For counts of detected and suppressed errors, rerun with: -v\n==21802== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)",
                    "exit_code": 0,
                    "success": true,
                    "parsed_output": []
                }
            }
        },
        "12": {
            "success": true,
            "status": 1,
            "tools": {
                "patch": {
                    "success": true
                },
                "compile[debug]": {
                    "status": 1,
                    "duration": 1,
                    "output": "",
                    "exit_code": 0,
                    "success": true,
                    "parsed_output": []
                },
                "execute": {
                    "status": 1,
                    "duration": 0,
                    "output": "Vrsta spremnika: Bure\nSadrzaj: Krv\nVlastita tezina: 5 (kg)\nSpecificna tezina tecnosti: 1300 (kg\/m^3)\nZapremina tecnosti: 150 (l)\nUkupna tezina: 200 (kg)\nVrsta spremnika: Sanduk\nSadrzaj: Voce\nTezine predmeta: 1 3 5 6 (kg)\nVlastita tezina: 50 (kg)\nUkupna tezina: 65 (kg)\nVrsta spremnika: Vreca\nSadrzaj: Brasno\nVlastita tezina: 0.1 (kg)\nTezina pohranjene materije: 25.5 (kg)\nUkupna tezina: 25.6 (kg)",
                    "exit_code": 0,
                    "success": true
                },
                "debug": {
                    "success": true
                },
                "profile[memcheck]": {
                    "status": 1,
                    "duration": 1,
                    "output": "==21822== Memcheck, a memory error detector\n==21822== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.\n==21822== Using Valgrind-3.14.0 and LibVEX; rerun with -h for copyright info\n==21822== Command: outputTmwReX\n==21822==\n====START_TEST_1022====Vrsta spremnika: Bure\nSadrzaj: Krv\nVlastita tezina: 5 (kg)\nSpecificna tezina tecnosti: 1300 (kg\/m^3)\nZapremina tecnosti: 150 (l)\nUkupna tezina: 200 (kg)\nVrsta spremnika: Sanduk\nSadrzaj: Voce\nTezine predmeta: 1 3 5 6 (kg)\nVlastita tezina: 50 (kg)\nUkupna tezina: 65 (kg)\nVrsta spremnika: Vreca\nSadrzaj: Brasno\nVlastita tezina: 0.1 (kg)\nTezina pohranjene materije: 25.5 (kg)\nUkupna tezina: 25.6 (kg)\n====END_TEST_1022======21822==\n==21822== HEAP SUMMARY:\n==21822==     in use at exit: 0 bytes in 0 blocks\n==21822==   total heap usage: 35 allocs, 35 frees, 78,496 bytes allocated\n==21822==\n==21822== All heap blocks were freed -- no leaks are possible\n==21822==\n==21822== For counts of detected and suppressed errors, rerun with: -v\n==21822== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)",
                    "exit_code": 0,
                    "success": true,
                    "parsed_output": []
                },
                "profile[sgcheck]": {
                    "status": 1,
                    "duration": 2,
                    "output": "==21828== Memcheck, a memory error detector\n==21828== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.\n==21828== Using Valgrind-3.14.0 and LibVEX; rerun with -h for copyright info\n==21828== Command: outputTmwReX\n==21828==\n====START_TEST_1022====Vrsta spremnika: Bure\nSadrzaj: Krv\nVlastita tezina: 5 (kg)\nSpecificna tezina tecnosti: 1300 (kg\/m^3)\nZapremina tecnosti: 150 (l)\nUkupna tezina: 200 (kg)\nVrsta spremnika: Sanduk\nSadrzaj: Voce\nTezine predmeta: 1 3 5 6 (kg)\nVlastita tezina: 50 (kg)\nUkupna tezina: 65 (kg)\nVrsta spremnika: Vreca\nSadrzaj: Brasno\nVlastita tezina: 0.1 (kg)\nTezina pohranjene materije: 25.5 (kg)\nUkupna tezina: 25.6 (kg)\n====END_TEST_1022======21828==\n==21828== HEAP SUMMARY:\n==21828==     in use at exit: 0 bytes in 0 blocks\n==21828==   total heap usage: 35 allocs, 35 frees, 78,496 bytes allocated\n==21828==\n==21828== All heap blocks were freed -- no leaks are possible\n==21828==\n==21828== For counts of detected and suppressed errors, rerun with: -v\n==21828== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)",
                    "exit_code": 0,
                    "success": true,
                    "parsed_output": []
                }
            }
        },
        "13": {
            "success": true,
            "status": 1,
            "tools": {
                "patch": {
                    "success": true
                },
                "compile[debug]": {
                    "status": 1,
                    "duration": 1,
                    "output": "",
                    "exit_code": 0,
                    "success": true,
                    "parsed_output": []
                },
                "execute": {
                    "status": 1,
                    "duration": 0,
                    "output": "Vrsta spremnika: Bure\nSadrzaj: Krv\nVlastita tezina: 5 (kg)\nSpecificna tezina tecnosti: 1300 (kg\/m^3)\nZapremina tecnosti: 150 (l)\nUkupna tezina: 200 (kg)\nVrsta spremnika: Sanduk\nSadrzaj: Voce\nTezine predmeta: 1 3 5 6 (kg)\nVlastita tezina: 50 (kg)\nUkupna tezina: 65 (kg)\nVrsta spremnika: Vreca\nSadrzaj: Brasno\nVlastita tezina: 0.1 (kg)\nTezina pohranjene materije: 25.5 (kg)\nUkupna tezina: 25.6 (kg)",
                    "exit_code": 0,
                    "success": true
                },
                "debug": {
                    "success": true
                },
                "profile[memcheck]": {
                    "status": 1,
                    "duration": 1,
                    "output": "==21854== Memcheck, a memory error detector\n==21854== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.\n==21854== Using Valgrind-3.14.0 and LibVEX; rerun with -h for copyright info\n==21854== Command: outputlx8xcP\n==21854==\n====START_TEST_8897====Vrsta spremnika: Bure\nSadrzaj: Krv\nVlastita tezina: 5 (kg)\nSpecificna tezina tecnosti: 1300 (kg\/m^3)\nZapremina tecnosti: 150 (l)\nUkupna tezina: 200 (kg)\nVrsta spremnika: Sanduk\nSadrzaj: Voce\nTezine predmeta: 1 3 5 6 (kg)\nVlastita tezina: 50 (kg)\nUkupna tezina: 65 (kg)\nVrsta spremnika: Vreca\nSadrzaj: Brasno\nVlastita tezina: 0.1 (kg)\nTezina pohranjene materije: 25.5 (kg)\nUkupna tezina: 25.6 (kg)\n====END_TEST_8897======21854==\n==21854== HEAP SUMMARY:\n==21854==     in use at exit: 0 bytes in 0 blocks\n==21854==   total heap usage: 35 allocs, 35 frees, 78,496 bytes allocated\n==21854==\n==21854== All heap blocks were freed -- no leaks are possible\n==21854==\n==21854== For counts of detected and suppressed errors, rerun with: -v\n==21854== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)",
                    "exit_code": 0,
                    "success": true,
                    "parsed_output": []
                },
                "profile[sgcheck]": {
                    "status": 1,
                    "duration": 1,
                    "output": "==21856== Memcheck, a memory error detector\n==21856== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.\n==21856== Using Valgrind-3.14.0 and LibVEX; rerun with -h for copyright info\n==21856== Command: outputlx8xcP\n==21856==\n====START_TEST_8897====Vrsta spremnika: Bure\nSadrzaj: Krv\nVlastita tezina: 5 (kg)\nSpecificna tezina tecnosti: 1300 (kg\/m^3)\nZapremina tecnosti: 150 (l)\nUkupna tezina: 200 (kg)\nVrsta spremnika: Sanduk\nSadrzaj: Voce\nTezine predmeta: 1 3 5 6 (kg)\nVlastita tezina: 50 (kg)\nUkupna tezina: 65 (kg)\nVrsta spremnika: Vreca\nSadrzaj: Brasno\nVlastita tezina: 0.1 (kg)\nTezina pohranjene materije: 25.5 (kg)\nUkupna tezina: 25.6 (kg)\n====END_TEST_8897======21856==\n==21856== HEAP SUMMARY:\n==21856==     in use at exit: 0 bytes in 0 blocks\n==21856==   total heap usage: 35 allocs, 35 frees, 78,496 bytes allocated\n==21856==\n==21856== All heap blocks were freed -- no leaks are possible\n==21856==\n==21856== For counts of detected and suppressed errors, rerun with: -v\n==21856== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)",
                    "exit_code": 0,
                    "success": true,
                    "parsed_output": []
                }
            }
        }
    }
}